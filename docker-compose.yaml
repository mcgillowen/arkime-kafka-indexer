version: "3"

services:
  indexer:
    image: ghcr.io/mcgillowen/arkime-kafka-indexer:latest
    #entrypoint: "sleep 3000"
    ports:
      - 8080:8080
    environment:
      KAFKA_CONSUMER_TOPIC: test-cons
      KAFKA_CONSUMER_GROUP_NAME: test-group
      KAFKA_CONSUMER_BROKERS: kafka-1:9092
      KAFKA_PRODUCER_BROKERS: kafka-1:9092
      KAFKA_PRODUCER_TOPIC: test-prod
      ELASTIC_SERVICE: elasticsearch
      ELASTIC_INDEXER_INSTANCES: "1"
      ELASTIC_CLIENT_RELOAD_INTERVAL: "5m"
      CONSUMER_CHANNEL_BUFFER_SIZE: "100"
      LOG_LEVEL: debug
      KAFKA_CONSUMER_INCREMENTAL_REBALANCE: "true"
      KAFKA_CONSUMER_OFFSET_COMMIT_INTERVAL: 5
      KAFKA_SSL_CA_LOCATION: /ssl/ca-cert
      KAFKA_SSL_CERT_LOCATION: /ssl/client_indexer_client.pem
      KAFKA_SSL_KEY_LOCATION: /ssl/client_indexer_client.key
      KAFKA_SSL_KEY_PASSWORD: abcdefgh
    restart: unless-stopped
    volumes:
      - ./ssl:/ssl
    depends_on:
      - kafka-1
      - kafka-2
      - elasticsearch

  kafka-1:
    image: confluentinc/cp-server:latest
    ports:
    - 9012:9012
    - 19092:9092
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      KAFKA_LISTENERS: 'SSL_HOST://localhost:19092,SSL://kafka-1:9092,CONTROLLER://kafka-1:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_ADVERTISED_LISTENERS: SSL_HOST://localhost:19092,SSL://kafka-1:9092
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,SSL_HOST:SSL,SSL:SSL'
      KAFKA_SSL_KEYSTORE_FILENAME: broker_kafka-1_server.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: creds
      KAFKA_SSL_KEY_CREDENTIALS: creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker_kafka-1_server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./ssl:/etc/kafka/secrets

  kafka-2:
    image: confluentinc/cp-server:latest
    ports:
      - 9013:9013
      - 29092:9092
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093'
      KAFKA_LISTENERS: 'SSL_HOST://localhost:29092,SSL://kafka-2:9092,CONTROLLER://kafka-2:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_ADVERTISED_LISTENERS: SSL_HOST://localhost:29092,SSL://kafka-2:9092
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,SSL_HOST:SSL,SSL:SSL'
      KAFKA_SSL_KEYSTORE_FILENAME: broker_kafka-2_server.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: creds
      KAFKA_SSL_KEY_CREDENTIALS: creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker_kafka-2_server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./ssl:/etc/kafka/secrets

  kafka-3:
    image: confluentinc/cp-server:latest
    ports:
      - 9014:9014
      - 39092:9092
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      KAFKA_LISTENERS: 'SSL_HOST://localhost:39092,SSL://kafka-3:9092,CONTROLLER://kafka-3:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_ADVERTISED_LISTENERS: SSL_HOST://localhost:39092,SSL://kafka-3:9092
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,SSL_HOST:SSL,SSL:SSL'
      KAFKA_SSL_KEYSTORE_FILENAME: broker_kafka-3_server.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: creds
      KAFKA_SSL_KEY_CREDENTIALS: creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker_kafka-3_server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
    volumes:
      - ./ssl:/etc/kafka/secrets

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9092
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SSL
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_LOCATION: /ssl/client_ui_client.keystore.jks
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_PASSWORD: "abcdefgh"
      KAFKA_CLUSTERS_0_SSL_TRUSTSTORELOCATION: /ssl/client_ui_client.truststore.jks
      KAFKA_CLUSTERS_0_SSL_TRUSTSTOREPASSWORD: "abcdefgh"
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: '' # DISABLE COMMON NAME VERIFICATION
    volumes:
      - ./ssl:/ssl
    depends_on:
      - kafka-1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - cluster.routing.alFILENAME.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
